{"version":3,"sources":["component/Login.js","component/MainPage.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","showHide","id","visible","document","getElementById","style","display","showHides","this","state","global","accessToken","mainId","login","username","value","password","requestMetadata","method","headers","body","fetch","baseUri","then","result","putToken","error","innerHTML","message","ok","json","window","token_type","access_token","console","log","JSON","stringify","className","src","alt","type","size","placeholder","autoFocus","autoComplete","onClick","React","Component","MainPage","getPersons","putData","putError","getPerson","data","getData","createPerson","updatePerson","removePerson","splunkEvent","status","statusText","url","color","title","legend","rows","cols","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ea7a4278.chunk.js","sourcesContent":["import React from 'react';\nimport './Login.css';\n\nclass Login extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            global: window.global,\n        };\n    }\n\n    showHide = function (id, visible) {\n        document.getElementById(id).style.display = (visible) ? 'block' : 'none';\n    }\n\n    showHides = function () {\n        const visible = (this.state.global.accessToken === 'undefined');\n        this.showHide('login', visible);\n        this.showHide(this.props.mainId, !visible);\n    }\n\n    login = function () {\n        var username = document.getElementById('username').value\n        var password = document.getElementById('password').value\n\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: `username=${username}&password=${password}`\n        };\n\n        fetch(`${this.state.global.baseUri}/login`, requestMetadata)\n            .then(\n                (result) => {\n                    this.putToken(result);\n                },\n                (error) => {\n                    document.getElementById('login-error').innerHTML = error.message;\n                }\n            )\n    }\n\n    putToken = function (result) {\n        if (result.ok)\n            (result.json()).then(value => {\n                window.global.accessToken = `${value.token_type} ${value.access_token}`;\n                this.showHides();\n            })\n        else\n            (result.json()).then(value => {\n                console.log(JSON.stringify(value, null, 2));\n                document.getElementById('login-error').innerHTML = 'Invalid user credentials!';\n            })\n    }\n\n    render() {\n        return (\n            <div id='login' className='login-form'>\n                <fieldset className=\"login-fieldset\">\n                    <legend className=\"login-legend\">Authentication:</legend>\n                    <div id=\"logo-img\"><img src=\"ss-logo.png\" alt=\"logo\" /></div>\n                    <div>\n                        <form>\n                            <div className='login'><input id='username' type='text' size='30' placeholder='Username or Email' autoFocus autoComplete=\"on\" /></div>\n                            <div className='login'><input id='password' type='password' size='30' placeholder='Password' autoComplete=\"on\" /></div>\n                            <div className='login-button'><button id=\"login-btn\" type='button' onClick={() => this.login()}>Login</button></div>\n                        </form>\n                        <div><p id=\"login-error\">&nbsp;</p></div>\n                    </div>\n                </fieldset>\n            </div>\n        )\n    }\n}\n\nexport default Login;\n","import React from 'react';\nimport './MainPage.css';\n\nclass MainPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            global: window.global,\n        };\n    }\n\n    render() {\n        return (\n            <div id='main' className=\"center\">\n                <h1>{this.props.title}</h1>\n                <fieldset className=\"main-fieldset\">\n                    <legend className=\"main-legend\">{this.props.legend}</legend>\n                    <div className=\"center\">\n                        <div id=\"buttons\" className='w3-bar'>\n                            <button title=\"Get Persons\" type=\"button\" onClick={() => this.getPersons()}>Persons</button>\n                            <button title=\"Get Person\" type=\"button\" onClick={() => this.getPerson()}>Person</button>\n                            <button title=\"Create Person\" type=\"button\" onClick={() => this.createPerson()}>Create</button>\n                            <button title=\"Update Person\" type=\"button\" onClick={() => this.updatePerson()}>Update</button>\n                            <button title=\"Delete Person\" type=\"button\" onClick={() => this.removePerson()}>Delete</button>\n                            <button title=\"Ingest Splunk event\" type=\"button\" onClick={() => this.splunkEvent()}>Splunk</button>\n                        </div>\n                        <div>\n                            <textarea id=\"data\" type=\"textarea\" rows=\"8\" cols=\"100\" title=\"input data\" />\n                            <textarea id=\"result\" type=\"textarea\" rows=\"16\" cols=\"100\" title=\"output result\" />\n                            <p id=\"status\">&nbsp;</p>\n                        </div>\n                    </div>\n                </fieldset>\n            </div >\n        )\n    }\n\n    getPersons = function () {\n\n        fetch(`${this.state.global.baseUri}/api/persons`, {\n            headers: {\n                'Authorization': this.state.global.accessToken\n            }\n        })\n            .then(\n                (result) => {\n                    this.putData('result', result);\n                },\n                (error) => {\n                    this.putError('result', error);\n                }\n            )\n    }\n\n    getPerson = function () {\n\n        var data = this.getData();\n        fetch(`${this.state.global.baseUri}/api/person/${data}`, {\n            headers: {\n                'Authorization': this.state.global.accessToken\n            }\n        })\n            .then(\n                (result) => {\n                    this.putData('result', result);\n                },\n                (error) => {\n                    this.putError('result', error);\n                }\n            )\n    }\n\n    createPerson = function () {\n\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.state.global.accessToken\n            },\n            body: this.getData()\n        };\n\n        fetch(`${this.state.global.baseUri}/api/person`, requestMetadata)\n            .then(\n                (result) => {\n                    this.putData('result', result);\n                },\n                (error) => {\n                    this.putError('result', error);\n                }\n            )\n    }\n\n    updatePerson = function () {\n\n        const requestMetadata = {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.state.global.accessToken\n            },\n            body: this.getData()\n        };\n\n        fetch(`${this.state.global.baseUri}/api/person`, requestMetadata)\n            .then(\n                (result) => {\n                    this.putData('result', result);\n                },\n                (error) => {\n                    this.putError('result', error);\n                }\n            )\n    }\n\n    removePerson = function () {\n\n        const requestMetadata = {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': this.state.global.accessToken\n            }\n        };\n        var data = this.getData();\n        fetch(`${this.state.global.baseUri}/api/person/${data}`, requestMetadata)\n            .then(\n                (result) => {\n                    this.putData('result', result);\n                },\n                (error) => {\n                    this.putError('result', error);\n                }\n            )\n    }\n\n    splunkEvent = function () {\n\n        const requestMetadata = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: this.getData()\n        };\n\n        fetch(`${this.state.global.baseUri}/splunk`, requestMetadata)\n            .then(\n                (result) => {\n                    this.putData('result', result);\n                },\n                (error) => {\n                    this.putError('result', error);\n                }\n            )\n    }\n\n    getData = function () {\n        return document.getElementById('data').value;\n    }\n\n    putData = function (id, result) {\n        document.getElementById('status').innerHTML = `${result.status} ${result.statusText} ${result.url}`;\n        document.getElementById(id).style.color = result.ok ? \"green\" : \"red\";\n        (result.json())\n            .then(value => document.getElementById(id).value = JSON.stringify(value, null, 2));\n    }\n\n    putError = function (id, error) {\n        document.getElementById('status').innerHTML = `${error.status} ${error.statusText} ${error.url}`;\n        document.getElementById(id).style.color = \"red\";\n        document.getElementById(id).value = error.message;\n    }\n\n}\n\nexport default MainPage","import React from 'react';\nimport Login from './component/Login';\nimport MainPage from './component/MainPage';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login mainId='main' />\n      <MainPage\n        title=\"Person REST API\"\n        legend=\"Operations:\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}